/* This is the main layout for the entire application.
   It uses flexbox to ensure the footer is always at the bottom,
   even on pages with little content. */
.app-layout {
  display: flex;
  flex-direction: column;
  min-height: 100vh;
}

/* This is the main navigation bar.
   'position: sticky' makes it stay fixed at the top of the
   viewport when the user scrolls down. */
.navbar {
  background-color: #fff;
  padding: 0 40px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  height: 60px;
  box-shadow: 0 2px 4px rgba(0,0,0,0.05);
  transition: background-color 0.3s;
  
  /* --- Sticky Navbar Properties --- */
  position: sticky;
  top: 0;
  z-index: 1000;
}

/* This is the container for the navigation links. */
.nav-links {
  display: flex;
  gap: 10px;
  height: 100%;
}

/* This styles each individual link in the navigation.
   We use NavLink from react-router-dom, which automatically
   adds an 'active' class to the link of the current page. */
.nav-link {
  display: flex;
  align-items: center;
  padding: 0 15px;
  font-size: 16px;
  font-weight: 500;
  color: #6c757d;
  text-decoration: none;
  border-bottom: 2px solid transparent;
  transition: color 0.2s, border-bottom-color 0.2s;
}

/* Hover effect for the links */
.nav-link:hover {
  color: #007bff;
}

/* Style for the currently active page link */
.nav-link.active {
  color: #007bff;
  border-bottom-color: #007bff;
}

/* --- Dark Mode Styles for Navigation --- */
body.dark .nav-link {
  color: #adb5bd;
}

body.dark .nav-link:hover {
  color: #8ab4f8;
}

body.dark .nav-link.active {
  color: #8ab4f8;
  border-bottom-color: #8ab4f8;
}
/* --- End of Dark Mode Styles --- */


/* This is the main content area of your application.
   'flex-grow: 1' is crucial. It tells this element to take up
   all available vertical space, which pushes the footer down. */
.app-content {
  padding: 20px;
  flex-grow: 1;
}